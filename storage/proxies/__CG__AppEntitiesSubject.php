<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Subject extends \App\Entities\Subject implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'name', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'mainProfessor', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'headOfDepartment', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'moduleCount', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hoursCount', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'creditsCount', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'date', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasCourse', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasPass', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasExam', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasPractice', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'groups'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'name', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'mainProfessor', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'headOfDepartment', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'moduleCount', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hoursCount', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'creditsCount', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'date', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasCourse', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasPass', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasExam', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'hasPractice', '' . "\0" . 'App\\Entities\\Subject' . "\0" . 'groups'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Subject $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupValues(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupValues', []);

        return parent::getGroupValues();
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\App\Entities\Group $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', [$group]);

        return parent::removeGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupsCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupsCollection', []);

        return parent::getGroupsCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroups(array $groups): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroups', [$groups]);

        return parent::setGroups($groups);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup($group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', [$group]);

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainProfessor(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainProfessor', []);

        return parent::getMainProfessor();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainProfessor(string $mainProfessor): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainProfessor', [$mainProfessor]);

        return parent::setMainProfessor($mainProfessor);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeadOfDepartment(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeadOfDepartment', []);

        return parent::getHeadOfDepartment();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeadOfDepartment(string $headOfDepartment): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeadOfDepartment', [$headOfDepartment]);

        return parent::setHeadOfDepartment($headOfDepartment);
    }

    /**
     * {@inheritDoc}
     */
    public function getModuleCount(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModuleCount', []);

        return parent::getModuleCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setModuleCount(int $moduleCount): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModuleCount', [$moduleCount]);

        return parent::setModuleCount($moduleCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoursCount(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoursCount', []);

        return parent::getHoursCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoursCount(int $hoursCount): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoursCount', [$hoursCount]);

        return parent::setHoursCount($hoursCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditsCount(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditsCount', []);

        return parent::getCreditsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreditsCount(int $creditsCount): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreditsCount', [$creditsCount]);

        return parent::setCreditsCount($creditsCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(string $date): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasCourse(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasCourse', []);

        return parent::getHasCourse();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasCourse(bool $hasCourse): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasCourse', [$hasCourse]);

        return parent::setHasCourse($hasCourse);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasPass(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasPass', []);

        return parent::getHasPass();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasPass(bool $hasPass): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasPass', [$hasPass]);

        return parent::setHasPass($hasPass);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasExam(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasExam', []);

        return parent::getHasExam();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasExam(bool $hasExam): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasExam', [$hasExam]);

        return parent::setHasExam($hasExam);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasPractice(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasPractice', []);

        return parent::getHasPractice();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasPractice(bool $hasPractice): \App\Entities\Subject
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasPractice', [$hasPractice]);

        return parent::setHasPractice($hasPractice);
    }

    /**
     * {@inheritDoc}
     */
    public function getTableArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTableArray', []);

        return parent::getTableArray();
    }

}
